- name: Configure IDS (mode passif)
  ansibleguy.opnsense.ids_general:
    interfaces: ['wan', 'opt1', 'opt2']
    enabled: true
    pattern_matcher: 'ac'
    profile: 'low'
    local_networks:
      - '10.1.91.160/23'
      - '192.168.4.1/24'
      - '192.168.5.1/24'
    log_rotate: 'daily'
    log_retention: 14
    syslog: true
    log_level: 'info'
    reload: true
  when: not enable_blocking

- name: Configure IPS (mode bloquant)
  ansibleguy.opnsense.ids_general:
    interfaces: ['wan', 'opt1', 'opt2']
    enabled: true
    block: true
    pattern_matcher: 'ac'
    profile: 'low'
    local_networks:
      - '10.1.91.160/23'
      - '192.168.4.1/24'
      - '192.168.5.1/24'
    log_rotate: 'daily'
    log_retention: 14
    syslog: true
    log_level: 'info'
  when: enable_blocking

- name: Print IDS general settings
  ansibleguy.opnsense.list:
    target: 'ids_general'
  register: existing_settings

- name: Debug IDS config
  ansible.builtin.debug:
    var: existing_settings.data

- name: Enable & reload ruleset
  ansibleguy.opnsense.ids_ruleset:
    name: 'ET open/compromised'
    enabled: true
    reload: true

- name: Disable ruleset
  ansibleguy.opnsense.ids_ruleset:
    name: 'ET open/compromised'
    enabled: false

- name: Debug rulesets
  ansibleguy.opnsense.list:
    target: 'ids_ruleset'
  register: existing_rulesets

- name: Print rulesets
  ansible.builtin.debug:
    var: existing_rulesets.data

- name: Get IDS status
  ansibleguy.opnsense.ids_action:
    action: 'status'

- name: Get IDS logs
  ansibleguy.opnsense.ids_action:
    action: 'get_alert_logs'
  register: ids_logs

- name: Print IDS alert logs
  ansible.builtin.debug:
    var: ids_logs.data

- name: Reload IDS rules
  ansibleguy.opnsense.ids_action:
    action: 'reload_rules'

- name: Update IDS rules
  ansibleguy.opnsense.ids_action:
    action: 'update_rules'
